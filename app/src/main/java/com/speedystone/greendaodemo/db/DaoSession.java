package com.speedystone.greendaodemo.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.azadljy.challenger.model.ChallengeModel;
import com.azadljy.challenger.model.ExperienceModel;
import com.azadljy.challenger.model.PictureModel;
import com.azadljy.challenger.model.RewardModel;

import com.speedystone.greendaodemo.db.ChallengeModelDao;
import com.speedystone.greendaodemo.db.ExperienceModelDao;
import com.speedystone.greendaodemo.db.PictureModelDao;
import com.speedystone.greendaodemo.db.RewardModelDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig challengeModelDaoConfig;
    private final DaoConfig experienceModelDaoConfig;
    private final DaoConfig pictureModelDaoConfig;
    private final DaoConfig rewardModelDaoConfig;

    private final ChallengeModelDao challengeModelDao;
    private final ExperienceModelDao experienceModelDao;
    private final PictureModelDao pictureModelDao;
    private final RewardModelDao rewardModelDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        challengeModelDaoConfig = daoConfigMap.get(ChallengeModelDao.class).clone();
        challengeModelDaoConfig.initIdentityScope(type);

        experienceModelDaoConfig = daoConfigMap.get(ExperienceModelDao.class).clone();
        experienceModelDaoConfig.initIdentityScope(type);

        pictureModelDaoConfig = daoConfigMap.get(PictureModelDao.class).clone();
        pictureModelDaoConfig.initIdentityScope(type);

        rewardModelDaoConfig = daoConfigMap.get(RewardModelDao.class).clone();
        rewardModelDaoConfig.initIdentityScope(type);

        challengeModelDao = new ChallengeModelDao(challengeModelDaoConfig, this);
        experienceModelDao = new ExperienceModelDao(experienceModelDaoConfig, this);
        pictureModelDao = new PictureModelDao(pictureModelDaoConfig, this);
        rewardModelDao = new RewardModelDao(rewardModelDaoConfig, this);

        registerDao(ChallengeModel.class, challengeModelDao);
        registerDao(ExperienceModel.class, experienceModelDao);
        registerDao(PictureModel.class, pictureModelDao);
        registerDao(RewardModel.class, rewardModelDao);
    }
    
    public void clear() {
        challengeModelDaoConfig.clearIdentityScope();
        experienceModelDaoConfig.clearIdentityScope();
        pictureModelDaoConfig.clearIdentityScope();
        rewardModelDaoConfig.clearIdentityScope();
    }

    public ChallengeModelDao getChallengeModelDao() {
        return challengeModelDao;
    }

    public ExperienceModelDao getExperienceModelDao() {
        return experienceModelDao;
    }

    public PictureModelDao getPictureModelDao() {
        return pictureModelDao;
    }

    public RewardModelDao getRewardModelDao() {
        return rewardModelDao;
    }

}
